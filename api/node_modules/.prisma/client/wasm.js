
/* !!! This is code generated by Prisma. Do not edit directly. !!!
/* eslint-disable */

Object.defineProperty(exports, "__esModule", { value: true });

const {
  PrismaClientKnownRequestError,
  PrismaClientUnknownRequestError,
  PrismaClientRustPanicError,
  PrismaClientInitializationError,
  PrismaClientValidationError,
  getPrismaClient,
  sqltag,
  empty,
  join,
  raw,
  skip,
  Decimal,
  Debug,
  objectEnumValues,
  makeStrictEnum,
  Extensions,
  warnOnce,
  defineDmmfProperty,
  Public,
  getRuntime,
  createParam,
} = require('@prisma/client/runtime/wasm-engine-edge.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 6.16.2
 * Query Engine version: 1c57fdcd7e44b29b9313256c76699e91c3ac3c43
 */
Prisma.prismaVersion = {
  client: "6.16.2",
  engine: "1c57fdcd7e44b29b9313256c76699e91c3ac3c43"
}

Prisma.PrismaClientKnownRequestError = PrismaClientKnownRequestError;
Prisma.PrismaClientUnknownRequestError = PrismaClientUnknownRequestError
Prisma.PrismaClientRustPanicError = PrismaClientRustPanicError
Prisma.PrismaClientInitializationError = PrismaClientInitializationError
Prisma.PrismaClientValidationError = PrismaClientValidationError
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = sqltag
Prisma.empty = empty
Prisma.join = join
Prisma.raw = raw
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = Extensions.getExtensionContext
Prisma.defineExtension = Extensions.defineExtension

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}





/**
 * Enums
 */
exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.UserScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  cargo: 'cargo'
};

exports.Prisma.ProjetoScalarFieldEnum = {
  id: 'id',
  nome: 'nome',
  descricao: 'descricao',
  dataInicio: 'dataInicio',
  dataFimPrevista: 'dataFimPrevista',
  statusId: 'statusId'
};

exports.Prisma.StatusTarefaScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.TarefaScalarFieldEnum = {
  id: 'id',
  titulo: 'titulo',
  descricao: 'descricao',
  prazo: 'prazo',
  concluida: 'concluida',
  projetoId: 'projetoId',
  assigneeId: 'assigneeId',
  statusTarefaId: 'statusTarefaId'
};

exports.Prisma.StatusScalarFieldEnum = {
  id: 'id',
  nome: 'nome'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.QueryMode = {
  default: 'default',
  insensitive: 'insensitive'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};


exports.Prisma.ModelName = {
  User: 'User',
  Projeto: 'Projeto',
  StatusTarefa: 'StatusTarefa',
  Tarefa: 'Tarefa',
  Status: 'Status'
};
/**
 * Create the Client
 */
const config = {
  "generator": {
    "name": "client",
    "provider": {
      "fromEnvVar": null,
      "value": "prisma-client-js"
    },
    "output": {
      "value": "/home/user/TaskManager/api/node_modules/@prisma/client",
      "fromEnvVar": null
    },
    "config": {
      "engineType": "library"
    },
    "binaryTargets": [
      {
        "fromEnvVar": null,
        "value": "debian-openssl-1.1.x",
        "native": true
      }
    ],
    "previewFeatures": [],
    "sourceFilePath": "/home/user/TaskManager/api/prisma/schema.prisma"
  },
  "relativeEnvPaths": {
    "rootEnvPath": null,
    "schemaEnvPath": "../../../.env"
  },
  "relativePath": "../../../prisma",
  "clientVersion": "6.16.2",
  "engineVersion": "1c57fdcd7e44b29b9313256c76699e91c3ac3c43",
  "datasourceNames": [
    "db"
  ],
  "activeProvider": "postgresql",
  "inlineDatasources": {
    "db": {
      "url": {
        "fromEnvVar": "DATABASE_URL",
        "value": null
      }
    }
  },
  "inlineSchema": "// This is your Prisma schema file,\n// learn more about it in the docs: https://pris.ly/d/prisma-schema\n\n// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?\n// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init\n\ngenerator client {\n  provider = \"prisma-client-js\"\n}\n\ndatasource db {\n  provider = \"postgresql\"\n  url      = env(\"DATABASE_URL\")\n}\n\nmodel User {\n  id    Int    @id @default(autoincrement())\n  nome  String\n  cargo String\n\n  tarefas Tarefa[] //relacionamento um user pode ter muitas tarefas vinculadas a ele\n\n  @@map(\"users\")\n}\n\nmodel Projeto {\n  id              Int      @id @default(autoincrement())\n  nome            String\n  descricao       String\n  dataInicio      DateTime\n  dataFimPrevista DateTime\n  statusId        Int\n  status          Status   @relation(fields: [statusId], references: [id]) // Faz o relacionamento da tabela projeto com a tabela status\n\n  //relacionamento um projeto pode ter muitas tarefas\n  tarefas Tarefa[]\n\n  @@map(\"projetos\")\n}\n\n//model para o status das tarefas\nmodel StatusTarefa {\n  id      Int      @id @default(autoincrement())\n  nome    String   @unique\n  tarefas Tarefa[] // Relacionamento com Tarefa\n\n  @@map(\"status_tarefa\")\n}\n\nmodel Tarefa {\n  id        Int       @id @default(autoincrement())\n  titulo    String\n  descricao String? // A descrição é opcional\n  prazo     DateTime? // O prazo é opcional\n  concluida Boolean   @default(false)\n\n  //relacionamento com o projeto\n  projetoId Int\n  projeto   Projeto @relation(fields: [projetoId], references: [id], onDelete: Cascade)\n\n  //relacionamento com o usuário\n  assigneeId Int? // (int? <- opcional) assigneeId para melhorar a clareza e semantica ao invés de um generico userId\n  assignee   User? @relation(fields: [assigneeId], references: [id], onDelete: SetNull)\n\n  //relacionamento com o status_tarefa\n  statusTarefaId Int // Chave estrangeira\n  statusTarefa   StatusTarefa @relation(fields: [statusTarefaId], references: [id])\n\n  @@map(\"tarefas\")\n}\n\n//model para os status do projeto\nmodel Status {\n  id       Int       @id @default(autoincrement())\n  nome     String    @unique\n  projetos Projeto[]\n\n  @@map(\"status\")\n}\n",
  "inlineSchemaHash": "7f085e820e6bb9651d4270322e16ef6a49472015e170052ee42fe2236dfc5981",
  "copyEngine": true
}
config.dirname = '/'

config.runtimeDataModel = JSON.parse("{\"models\":{\"User\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"cargo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tarefas\",\"kind\":\"object\",\"type\":\"Tarefa\",\"relationName\":\"TarefaToUser\"}],\"dbName\":\"users\"},\"Projeto\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"dataInicio\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"dataFimPrevista\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"statusId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"status\",\"kind\":\"object\",\"type\":\"Status\",\"relationName\":\"ProjetoToStatus\"},{\"name\":\"tarefas\",\"kind\":\"object\",\"type\":\"Tarefa\",\"relationName\":\"ProjetoToTarefa\"}],\"dbName\":\"projetos\"},\"StatusTarefa\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"tarefas\",\"kind\":\"object\",\"type\":\"Tarefa\",\"relationName\":\"StatusTarefaToTarefa\"}],\"dbName\":\"status_tarefa\"},\"Tarefa\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"titulo\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"descricao\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"prazo\",\"kind\":\"scalar\",\"type\":\"DateTime\"},{\"name\":\"concluida\",\"kind\":\"scalar\",\"type\":\"Boolean\"},{\"name\":\"projetoId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"projeto\",\"kind\":\"object\",\"type\":\"Projeto\",\"relationName\":\"ProjetoToTarefa\"},{\"name\":\"assigneeId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"assignee\",\"kind\":\"object\",\"type\":\"User\",\"relationName\":\"TarefaToUser\"},{\"name\":\"statusTarefaId\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"statusTarefa\",\"kind\":\"object\",\"type\":\"StatusTarefa\",\"relationName\":\"StatusTarefaToTarefa\"}],\"dbName\":\"tarefas\"},\"Status\":{\"fields\":[{\"name\":\"id\",\"kind\":\"scalar\",\"type\":\"Int\"},{\"name\":\"nome\",\"kind\":\"scalar\",\"type\":\"String\"},{\"name\":\"projetos\",\"kind\":\"object\",\"type\":\"Projeto\",\"relationName\":\"ProjetoToStatus\"}],\"dbName\":\"status\"}},\"enums\":{},\"types\":{}}")
defineDmmfProperty(exports.Prisma, config.runtimeDataModel)
config.engineWasm = {
  getRuntime: async () => require('./query_engine_bg.js'),
  getQueryEngineWasmModule: async () => {
    const loader = (await import('#wasm-engine-loader')).default
    const engine = (await loader).default
    return engine
  }
}
config.compilerWasm = undefined

config.injectableEdgeEnv = () => ({
  parsed: {
    DATABASE_URL: typeof globalThis !== 'undefined' && globalThis['DATABASE_URL'] || typeof process !== 'undefined' && process.env && process.env.DATABASE_URL || undefined
  }
})

if (typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined) {
  Debug.enable(typeof globalThis !== 'undefined' && globalThis['DEBUG'] || typeof process !== 'undefined' && process.env && process.env.DEBUG || undefined)
}

const PrismaClient = getPrismaClient(config)
exports.PrismaClient = PrismaClient
Object.assign(exports, Prisma)

